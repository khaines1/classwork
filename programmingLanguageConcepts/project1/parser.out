Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> lstart
Rule 1     lstart -> lisp SEMI
Rule 2     lisp -> INT
Rule 3     lisp -> VAR
Rule 4     lisp -> LPAREN ADD lisp lisp RPAREN
Rule 5     lisp -> LPAREN SUB lisp lisp RPAREN
Rule 6     lisp -> LPAREN MUL lisp lisp RPAREN
Rule 7     lisp -> LPAREN DIV lisp lisp RPAREN
Rule 8     lisp -> LPAREN CAR list RPAREN
Rule 9     lisp -> LPAREN LET LPAREN keyval RPAREN lisp RPAREN
Rule 10    lisp -> list
Rule 11    keyval -> LPAREN VAR lisp RPAREN
Rule 12    keyval -> LPAREN VAR lisp RPAREN keyval
Rule 13    list -> LPAREN CDR list RPAREN
Rule 14    list -> LPAREN CONS lisp list RPAREN
Rule 15    list -> LPAREN seq RPAREN
Rule 16    seq -> lisp
Rule 17    seq -> lisp seq

Terminals, with rules where they appear

ADD                  : 4
CAR                  : 8
CDR                  : 13
CONS                 : 14
DIV                  : 7
INT                  : 2
LET                  : 9
LPAREN               : 4 5 6 7 8 9 9 11 12 13 14 15
MUL                  : 6
RPAREN               : 4 5 6 7 8 9 9 11 12 13 14 15
SEMI                 : 1
SUB                  : 5
VAR                  : 3 11 12
error                : 

Nonterminals, with rules where they appear

keyval               : 9 12
lisp                 : 1 4 4 5 5 6 6 7 7 9 11 12 14 16 17
list                 : 8 10 13 14
lstart               : 0
seq                  : 15 17

Parsing method: LALR

state 0

    (0) S' -> . lstart
    (1) lstart -> . lisp SEMI
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lstart                         shift and go to state 1
    lisp                           shift and go to state 2
    list                           shift and go to state 6

state 1

    (0) S' -> lstart .



state 2

    (1) lstart -> lisp . SEMI

    SEMI            shift and go to state 7


state 3

    (2) lisp -> INT .

    SEMI            reduce using rule 2 (lisp -> INT .)
    INT             reduce using rule 2 (lisp -> INT .)
    VAR             reduce using rule 2 (lisp -> INT .)
    LPAREN          reduce using rule 2 (lisp -> INT .)
    RPAREN          reduce using rule 2 (lisp -> INT .)


state 4

    (3) lisp -> VAR .

    SEMI            reduce using rule 3 (lisp -> VAR .)
    INT             reduce using rule 3 (lisp -> VAR .)
    VAR             reduce using rule 3 (lisp -> VAR .)
    LPAREN          reduce using rule 3 (lisp -> VAR .)
    RPAREN          reduce using rule 3 (lisp -> VAR .)


state 5

    (4) lisp -> LPAREN . ADD lisp lisp RPAREN
    (5) lisp -> LPAREN . SUB lisp lisp RPAREN
    (6) lisp -> LPAREN . MUL lisp lisp RPAREN
    (7) lisp -> LPAREN . DIV lisp lisp RPAREN
    (8) lisp -> LPAREN . CAR list RPAREN
    (9) lisp -> LPAREN . LET LPAREN keyval RPAREN lisp RPAREN
    (13) list -> LPAREN . CDR list RPAREN
    (14) list -> LPAREN . CONS lisp list RPAREN
    (15) list -> LPAREN . seq RPAREN
    (16) seq -> . lisp
    (17) seq -> . lisp seq
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    ADD             shift and go to state 8
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    CAR             shift and go to state 13
    LET             shift and go to state 14
    CDR             shift and go to state 15
    CONS            shift and go to state 16
    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 9
    list                           shift and go to state 6
    seq                            shift and go to state 17

state 6

    (10) lisp -> list .

    SEMI            reduce using rule 10 (lisp -> list .)
    INT             reduce using rule 10 (lisp -> list .)
    VAR             reduce using rule 10 (lisp -> list .)
    LPAREN          reduce using rule 10 (lisp -> list .)
    RPAREN          reduce using rule 10 (lisp -> list .)


state 7

    (1) lstart -> lisp SEMI .

    $end            reduce using rule 1 (lstart -> lisp SEMI .)


state 8

    (4) lisp -> LPAREN ADD . lisp lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 18
    list                           shift and go to state 6

state 9

    (16) seq -> lisp .
    (17) seq -> lisp . seq
    (16) seq -> . lisp
    (17) seq -> . lisp seq
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    RPAREN          reduce using rule 16 (seq -> lisp .)
    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 9
    seq                            shift and go to state 19
    list                           shift and go to state 6

state 10

    (5) lisp -> LPAREN SUB . lisp lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 20
    list                           shift and go to state 6

state 11

    (6) lisp -> LPAREN MUL . lisp lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 21
    list                           shift and go to state 6

state 12

    (7) lisp -> LPAREN DIV . lisp lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 22
    list                           shift and go to state 6

state 13

    (8) lisp -> LPAREN CAR . list RPAREN
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    LPAREN          shift and go to state 23

    list                           shift and go to state 24

state 14

    (9) lisp -> LPAREN LET . LPAREN keyval RPAREN lisp RPAREN

    LPAREN          shift and go to state 25


state 15

    (13) list -> LPAREN CDR . list RPAREN
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    LPAREN          shift and go to state 23

    list                           shift and go to state 26

state 16

    (14) list -> LPAREN CONS . lisp list RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 27
    list                           shift and go to state 6

state 17

    (15) list -> LPAREN seq . RPAREN

    RPAREN          shift and go to state 28


state 18

    (4) lisp -> LPAREN ADD lisp . lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 29
    list                           shift and go to state 6

state 19

    (17) seq -> lisp seq .

    RPAREN          reduce using rule 17 (seq -> lisp seq .)


state 20

    (5) lisp -> LPAREN SUB lisp . lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 30
    list                           shift and go to state 6

state 21

    (6) lisp -> LPAREN MUL lisp . lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 31
    list                           shift and go to state 6

state 22

    (7) lisp -> LPAREN DIV lisp . lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 32
    list                           shift and go to state 6

state 23

    (13) list -> LPAREN . CDR list RPAREN
    (14) list -> LPAREN . CONS lisp list RPAREN
    (15) list -> LPAREN . seq RPAREN
    (16) seq -> . lisp
    (17) seq -> . lisp seq
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    CDR             shift and go to state 15
    CONS            shift and go to state 16
    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    list                           shift and go to state 6
    lisp                           shift and go to state 9
    seq                            shift and go to state 17

state 24

    (8) lisp -> LPAREN CAR list . RPAREN

    RPAREN          shift and go to state 33


state 25

    (9) lisp -> LPAREN LET LPAREN . keyval RPAREN lisp RPAREN
    (11) keyval -> . LPAREN VAR lisp RPAREN
    (12) keyval -> . LPAREN VAR lisp RPAREN keyval

    LPAREN          shift and go to state 34

    keyval                         shift and go to state 35

state 26

    (13) list -> LPAREN CDR list . RPAREN

    RPAREN          shift and go to state 36


state 27

    (14) list -> LPAREN CONS lisp . list RPAREN
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    LPAREN          shift and go to state 23

    list                           shift and go to state 37

state 28

    (15) list -> LPAREN seq RPAREN .

    SEMI            reduce using rule 15 (list -> LPAREN seq RPAREN .)
    INT             reduce using rule 15 (list -> LPAREN seq RPAREN .)
    VAR             reduce using rule 15 (list -> LPAREN seq RPAREN .)
    LPAREN          reduce using rule 15 (list -> LPAREN seq RPAREN .)
    RPAREN          reduce using rule 15 (list -> LPAREN seq RPAREN .)


state 29

    (4) lisp -> LPAREN ADD lisp lisp . RPAREN

    RPAREN          shift and go to state 38


state 30

    (5) lisp -> LPAREN SUB lisp lisp . RPAREN

    RPAREN          shift and go to state 39


state 31

    (6) lisp -> LPAREN MUL lisp lisp . RPAREN

    RPAREN          shift and go to state 40


state 32

    (7) lisp -> LPAREN DIV lisp lisp . RPAREN

    RPAREN          shift and go to state 41


state 33

    (8) lisp -> LPAREN CAR list RPAREN .

    SEMI            reduce using rule 8 (lisp -> LPAREN CAR list RPAREN .)
    INT             reduce using rule 8 (lisp -> LPAREN CAR list RPAREN .)
    VAR             reduce using rule 8 (lisp -> LPAREN CAR list RPAREN .)
    LPAREN          reduce using rule 8 (lisp -> LPAREN CAR list RPAREN .)
    RPAREN          reduce using rule 8 (lisp -> LPAREN CAR list RPAREN .)


state 34

    (11) keyval -> LPAREN . VAR lisp RPAREN
    (12) keyval -> LPAREN . VAR lisp RPAREN keyval

    VAR             shift and go to state 42


state 35

    (9) lisp -> LPAREN LET LPAREN keyval . RPAREN lisp RPAREN

    RPAREN          shift and go to state 43


state 36

    (13) list -> LPAREN CDR list RPAREN .

    SEMI            reduce using rule 13 (list -> LPAREN CDR list RPAREN .)
    INT             reduce using rule 13 (list -> LPAREN CDR list RPAREN .)
    VAR             reduce using rule 13 (list -> LPAREN CDR list RPAREN .)
    LPAREN          reduce using rule 13 (list -> LPAREN CDR list RPAREN .)
    RPAREN          reduce using rule 13 (list -> LPAREN CDR list RPAREN .)


state 37

    (14) list -> LPAREN CONS lisp list . RPAREN

    RPAREN          shift and go to state 44


state 38

    (4) lisp -> LPAREN ADD lisp lisp RPAREN .

    SEMI            reduce using rule 4 (lisp -> LPAREN ADD lisp lisp RPAREN .)
    INT             reduce using rule 4 (lisp -> LPAREN ADD lisp lisp RPAREN .)
    VAR             reduce using rule 4 (lisp -> LPAREN ADD lisp lisp RPAREN .)
    LPAREN          reduce using rule 4 (lisp -> LPAREN ADD lisp lisp RPAREN .)
    RPAREN          reduce using rule 4 (lisp -> LPAREN ADD lisp lisp RPAREN .)


state 39

    (5) lisp -> LPAREN SUB lisp lisp RPAREN .

    SEMI            reduce using rule 5 (lisp -> LPAREN SUB lisp lisp RPAREN .)
    INT             reduce using rule 5 (lisp -> LPAREN SUB lisp lisp RPAREN .)
    VAR             reduce using rule 5 (lisp -> LPAREN SUB lisp lisp RPAREN .)
    LPAREN          reduce using rule 5 (lisp -> LPAREN SUB lisp lisp RPAREN .)
    RPAREN          reduce using rule 5 (lisp -> LPAREN SUB lisp lisp RPAREN .)


state 40

    (6) lisp -> LPAREN MUL lisp lisp RPAREN .

    SEMI            reduce using rule 6 (lisp -> LPAREN MUL lisp lisp RPAREN .)
    INT             reduce using rule 6 (lisp -> LPAREN MUL lisp lisp RPAREN .)
    VAR             reduce using rule 6 (lisp -> LPAREN MUL lisp lisp RPAREN .)
    LPAREN          reduce using rule 6 (lisp -> LPAREN MUL lisp lisp RPAREN .)
    RPAREN          reduce using rule 6 (lisp -> LPAREN MUL lisp lisp RPAREN .)


state 41

    (7) lisp -> LPAREN DIV lisp lisp RPAREN .

    SEMI            reduce using rule 7 (lisp -> LPAREN DIV lisp lisp RPAREN .)
    INT             reduce using rule 7 (lisp -> LPAREN DIV lisp lisp RPAREN .)
    VAR             reduce using rule 7 (lisp -> LPAREN DIV lisp lisp RPAREN .)
    LPAREN          reduce using rule 7 (lisp -> LPAREN DIV lisp lisp RPAREN .)
    RPAREN          reduce using rule 7 (lisp -> LPAREN DIV lisp lisp RPAREN .)


state 42

    (11) keyval -> LPAREN VAR . lisp RPAREN
    (12) keyval -> LPAREN VAR . lisp RPAREN keyval
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 45
    list                           shift and go to state 6

state 43

    (9) lisp -> LPAREN LET LPAREN keyval RPAREN . lisp RPAREN
    (2) lisp -> . INT
    (3) lisp -> . VAR
    (4) lisp -> . LPAREN ADD lisp lisp RPAREN
    (5) lisp -> . LPAREN SUB lisp lisp RPAREN
    (6) lisp -> . LPAREN MUL lisp lisp RPAREN
    (7) lisp -> . LPAREN DIV lisp lisp RPAREN
    (8) lisp -> . LPAREN CAR list RPAREN
    (9) lisp -> . LPAREN LET LPAREN keyval RPAREN lisp RPAREN
    (10) lisp -> . list
    (13) list -> . LPAREN CDR list RPAREN
    (14) list -> . LPAREN CONS lisp list RPAREN
    (15) list -> . LPAREN seq RPAREN

    INT             shift and go to state 3
    VAR             shift and go to state 4
    LPAREN          shift and go to state 5

    lisp                           shift and go to state 46
    list                           shift and go to state 6

state 44

    (14) list -> LPAREN CONS lisp list RPAREN .

    SEMI            reduce using rule 14 (list -> LPAREN CONS lisp list RPAREN .)
    INT             reduce using rule 14 (list -> LPAREN CONS lisp list RPAREN .)
    VAR             reduce using rule 14 (list -> LPAREN CONS lisp list RPAREN .)
    LPAREN          reduce using rule 14 (list -> LPAREN CONS lisp list RPAREN .)
    RPAREN          reduce using rule 14 (list -> LPAREN CONS lisp list RPAREN .)


state 45

    (11) keyval -> LPAREN VAR lisp . RPAREN
    (12) keyval -> LPAREN VAR lisp . RPAREN keyval

    RPAREN          shift and go to state 47


state 46

    (9) lisp -> LPAREN LET LPAREN keyval RPAREN lisp . RPAREN

    RPAREN          shift and go to state 48


state 47

    (11) keyval -> LPAREN VAR lisp RPAREN .
    (12) keyval -> LPAREN VAR lisp RPAREN . keyval
    (11) keyval -> . LPAREN VAR lisp RPAREN
    (12) keyval -> . LPAREN VAR lisp RPAREN keyval

    RPAREN          reduce using rule 11 (keyval -> LPAREN VAR lisp RPAREN .)
    LPAREN          shift and go to state 34

    keyval                         shift and go to state 49

state 48

    (9) lisp -> LPAREN LET LPAREN keyval RPAREN lisp RPAREN .

    SEMI            reduce using rule 9 (lisp -> LPAREN LET LPAREN keyval RPAREN lisp RPAREN .)
    INT             reduce using rule 9 (lisp -> LPAREN LET LPAREN keyval RPAREN lisp RPAREN .)
    VAR             reduce using rule 9 (lisp -> LPAREN LET LPAREN keyval RPAREN lisp RPAREN .)
    LPAREN          reduce using rule 9 (lisp -> LPAREN LET LPAREN keyval RPAREN lisp RPAREN .)
    RPAREN          reduce using rule 9 (lisp -> LPAREN LET LPAREN keyval RPAREN lisp RPAREN .)


state 49

    (12) keyval -> LPAREN VAR lisp RPAREN keyval .

    RPAREN          reduce using rule 12 (keyval -> LPAREN VAR lisp RPAREN keyval .)

